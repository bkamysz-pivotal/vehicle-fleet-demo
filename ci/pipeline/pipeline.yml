---
resource_types:
- name: cf-cli-resource
  type: docker-image
  source:
    repository: pivotalpa/cf-cli-resource
    tag: latest

groups:
- name: release
  jobs:
  - prepare-cf-env
  - build-accounts
- name: destroy
  jobs:
  - destroy

jobs:
#- name: destroy
#  public: true
#  plan:
#  - get: workspace
#  - put: cf-delete
#    resource: cf-env
#    params:
#      command: delete
#      app_name: accounts
#      delete_mapped_routes: true
#  - aggregate:
#    - put: cf-delete-service
#      resource: cf-env
#      params:
#        command: delete-service
#        service_instance: {{cf-db-service-name}}
#    - put: cf-delete-service
#      resource: cf-env
#      params:
#        command: delete-service
#        service_instance: config-server
#    - put: cf-delete-service
#      resource: cf-env
#      params:
#        command: delete-service
#        service_instance: discovery-service
#    - put: cf-delete-service
#      resource: cf-env
#      params:
#        command: delete-service
#        service_instance: circuit-breaker-dashboard
#    - put: cf-delete-service
#      resource: cf-env
#      params:
#        command: delete-service
#        service_instance: zipkinRabbit

#- name: build-service
#  public: true
#  serial: true
#  plan:
#  - get: workspace
##    passed: [ prepare-cf-env ]
#    trigger: true
#  - task: build
#    file: workspace/ci/tasks/build-service/task.yml
#    params:
#      ARTIFACT_ID: accounts
#  - put: cf-zero-downtime-push
#    resource: cf-env
#    params:
#      command: zero-downtime-push
#      manifest: build-output/manifest.yml
#      environment_variables:
#        TRUST_CERTS: {{cf-api-uri}}
#        CF_TARGET: {{cf-target-url}}

- name: prepare-cf-env
  public: true
  serial: true
  plan:
  - get: vehicle-fleet-demo
    trigger: true
  - aggregate:
    - put: cf-create-service
      resource: cf-env
      params:
        command: create-service
        service: p-mysql
        plan: 100mb
        service_instance: mysql
        timeout: 300
        wait_for_service: true
    - put: cf-create-service
      resource: cf-env
      params:
        command: create-service
        service: p-config-server
        plan: standard
        service_instance: configserver
        timeout: 300
        wait_for_service: true
        configuration: '{ "count": 2, "git": { "uri": "https://github.com/scratches/vehicle-config-repo", "cloneOnStart": "true" } }'
    - put: cf-create-service
      resource: cf-env
      params:
        command: create-service
        service: p-service-registry
        plan: standard
        service_instance: eureka
        timeout: 300
        wait_for_service: true
    - put: cf-create-service
      resource: cf-env
      params:
        command: create-service
        service: p-rabbitmq
        plan: standard
        service_instance: rabbitmq
        timeout: 300
        wait_for_service: true

resources:
- name: vehicle-fleet-demo
  type: git
  source:
    uri: {{git-uri}}
    branch: {{git-branch}}
- name: cf-env
  type: cf-cli-resource
  source:
    api: {{cf-api-uri}}
    username: {{cf-username}}
    password: {{cf-password}}
    skip_cert_check: true
    org: {{cf-org}}
    space: {{cf-space}}
